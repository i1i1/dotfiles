#!/usr/bin/gawk -f
func getln(cmd,     tmp) {
    cmd | getline tmp
    close(cmd)
    return tmp
}

func color(s, clr) {
#   return "<span foreground=\""clr"\">"s"</span>"
    return s
}

func sound() {
    sink_name   = getln("pacmd info | awk '/Default sink/{print $4}'")
    sink_number = getln("pacmd info | awk '/sink:.*"sink_name"/ {print $2}'")

    sink = "pactl list sinks|awk '/Sink #"sink_number"/{p=1;next} /Sink #/{p=0} p==1{print}'"

    mute = getln(sink"|awk '/Mute/{print $2}'") == "yes"
    name = getln(sink"|awk '/Description:/{print $2}'")

    icon = (mute ? color(" ", "#007000") : color(" ", "#007000"))

    return icon name
}

func wifi(     net, cmd) {
    cmd="nmcli d show wlp3s0|grep ^GENERAL.CONNECTION|cut -d: -f2"
    net=getln(cmd)
    sub(/^ */, "", net)
    sub(/ *$/, "", net)
    if (net == "\"\"") {
        ret = getln("cat /tmp/last_wifi")
        print "" > "/tmp/last_wifi"
        return ret
    }
    print net > "/tmp/last_wifi"
    return color(" ", "#804040")net
}

func cpu(     usage, ncpu, res) {
    ncpu=getln("cat /proc/cpuinfo|grep proce|wc -l")
    usage=getln("ps -Ao %cpu|awk '{a+=$1}END{print a}'")
    res=sprintf("%d%%", usage/ncpu)
    return color(" ", "#8050a0")res
}

func memory(     cmd) {
    cmd="free |awk '/Mem/{printf(\"%d%%\", 100 - $7*100/$2)}'"
    return color(" ", "#a06540")getln(cmd)
}

func time() {
    return color("", "#5080f0")getln("date '+%H:%M'")
}

func date() {
    return color(" ", "#5050a0")getln("date '+%b %d'")
}

func battery(     clr, per, state, rem) {
    clr = color(" ", "#80a050")
    state = getln("acpi|tr -d ','|cut -d' ' -f3")
    per =   getln("acpi|tr -d ','|cut -d' ' -f4")
    rem =   getln("acpi|tr -d ','|cut -d' ' -f5")

    return state == "Discharging" ? clr per " "  rem : clr per "+" rem
}

func layout() {
    l = getln("xset -q | grep LED| awk '{print $NF}'")
    return l == 1000 ? "ru" : "en"
}

func tempreture() {
    icon = color(" ", "#80a050")
    return icon getln("sed -n ~/.cache/wttr \
        -e 's/\x1b\\[[0-9;]*m//g' \
        -e 's/^.* \\([^ ]*\\) °C/\\1/' \
        -e 's/ *$//' \
        -e 4p \
    ")
}

func rain() {
    icon = color(" ", "#80a050")
    cmd = "sed -n 16p ~/.cache/wttr | tr ' ' '\n' | grep % | tr -d %"
    while (cmd | getline ln > 0) {
        n++
        per += ln
    }
    close(cmd)
    return icon sprintf("%d", per/n) "%"
}

BEGIN {
    s=" "
    print \
        s time() \
        s date() \
        s cpu() \
        s memory() \
        s tempreture() \
        s rain() \
        s wifi() \
        s sound() \
        s battery() \
        s layout()
}
